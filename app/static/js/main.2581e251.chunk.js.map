{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","placeholder","type","TodoListItem","this","props","label","onDeleted","onToggleDone","onToggleImportant","important","title","onClick","Component","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","ItemAddForm","onItemAdded","App","maxId","state","todoData","createTodoItem","deleteItem","setState","idx","findIndex","el","before","slice","after","addItem","text","console","log","newItem","oldItem","doneCount","filter","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2581e251.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );        \r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nconst SearchPanel = () => {\r\n\r\n    const searchText = 'type to search';\r\n    //пример подключения инлайн-стилей:\r\n    // const styleSearchPanel = {\r\n    //     fontSize: '20px',\r\n    //     fontStyle: 'italic'     \r\n    // };\r\n    // return <input \r\n    //     style={styleSearchPanel}\r\n    //     placeholder={searchText}\r\n    //     disabled={false}\r\n    //     type=\"text\" />;\r\n\r\n    return <input className=\"form-control  search-input\"\r\n        placeholder={searchText} \r\n        type=\"text\" />;    \r\n};\r\n\r\nexport default SearchPanel;","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {   \r\n    \r\n    // state = { \r\n    //     done: false,\r\n    //     important: false\r\n    // };\r\n    // onLabelClick = () => {\r\n    //     this.setState((state) => {\r\n    //         return {\r\n    //             done: !state.done\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    // onMarkImportant = () => {\r\n    //     this.setState((state) => {\r\n    //         return {\r\n    //             important: !state.important\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n\r\n    render() {\r\n        const { label, onDeleted, onToggleDone, \r\n                onToggleImportant, done, important\r\n            } = this.props;\r\n        // const { done, important } = this.state;\r\n        \r\n        let className = 'todo-list-item';\r\n        if (done) {\r\n            className += ' done';\r\n        }\r\n        if (important) {\r\n            className += ' important';\r\n        }\r\n    \r\n        return  (\r\n            <div className={className}>\r\n                    \r\n                <span className=\"float-right\">                \r\n                    <button className=\"btn btn-outline-danger btn-sm\"\r\n                        type=\"button\"\r\n                        title=\"Delet done\" \r\n                        onClick={ onDeleted }\r\n                    >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-success btn-sm\"\r\n                        type=\"button\"\r\n                        title=\"mark Important\"\r\n                        onClick={ onToggleImportant }\r\n                    >\r\n                        <i className=\"fa fa-exclamation\"></i>\r\n                    </button>              \r\n                </span>\r\n    \r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    title=\"mark done\"                  \r\n                    onClick={ onToggleDone }\r\n                >\r\n                    { label }\r\n                </span> \r\n    \r\n    \r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\r\n    {\r\n    // const elements = todos.map((item) => {\r\n    //     return (\r\n    //         <li>\r\n    //             <TodoListItem \r\n    //                 label={item.label}\r\n    //                 important={item.important}\r\n    //             />\r\n    //         </li>\r\n    //     );\r\n    // });\r\n\r\n    //или тоже самое используя Spread-оператор для объекта чтобы передать \r\n    // каждое свойство объекта внутрь компонета:\r\n    // const elements = todos.map((item) => {\r\n    //     return (\r\n    //         <li key={item.id}>\r\n    //             <TodoListItem { ...item } />\r\n    //         </li>\r\n    //     );\r\n    // });    \r\n    }\r\n    const elements = todos.map((item) => {\r\n\r\n        //каждому JSX элементу в массиве нужно уникальное свойство key\r\n        //исключим передачу свойства id в элемент TodoListItem используя рест-параметр \r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id}  className=\"list-group-item\">\r\n                <TodoListItem \r\n                    { ...itemProps }\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });    \r\n\r\n\r\n    return (\r\n        <ul  className=\"list-group  todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <button className=\"btn  btn-info\"\r\n                    type=\"button\">All</button>\r\n                <button className=\"btn  btn-outline-secondary\"\r\n                    type=\"button\">Active</button>\r\n                <button className=\"btn  btn-outline-secondary\"\r\n                    type=\"button\">Done</button>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n// const ItemStatusFilter = () => {\r\n//     return (\r\n//         <div className=\"btn-group\">\r\n//             <button className=\"btn  btn-info\"\r\n//                 type=\"button\">All</button>\r\n//             <button className=\"btn  btn-outline-secondary\"\r\n//                 type=\"button\">Active</button>\r\n//             <button className=\"btn  btn-outline-secondary\"\r\n//                 type=\"button\">Done</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    render () {\r\n        const addItemText = 'type to todo'\r\n\r\n        return (\r\n            <div className=\"item-add-form  d-flex\">\r\n                <input \r\n                    className=\"item-add-form-input  form-control\"\r\n                    placeholder={addItemText} \r\n                    type=\"text\" \r\n                />\r\n                <button className=\"btn  btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        title=\"Delet done\" \r\n                        onClick={ () => this.props.onItemAdded('add item') }\r\n                >\r\n                            Add Item\r\n                </button>\r\n            </div>   \r\n            \r\n        );        \r\n    };\r\n};\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId=100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Learn React'),\r\n            this.createTodoItem('Build Awesome React App'),\r\n            this.createTodoItem('Give to the world my \\'Todo\\u00A0App\\'')\r\n        ]\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            //todoData.splice(idx, 1); - нельзя изменять существующий State\r\n\r\n            // [a, b, c, d, e]\r\n            // [a, b,    d, e]\r\n            const before = todoData.slice(0, idx);\r\n            const after = todoData.slice(idx + 1);\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        //\r\n        console.log('text:', text);\r\n        // generate id\r\n        const newItem = this.createTodoItem(text);\r\n        // add element in array\r\n        this.setState(({todoData}) => {\r\n\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            // 1. update objekt\r\n            const oldItem = todoData[idx];\r\n            const newItem = { ...oldItem, important: !oldItem.important };\r\n\r\n            // 2. construct new array\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                newItem,\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray \r\n            }\r\n        });\r\n        \r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            // 1. update objekt\r\n            const oldItem = todoData[idx];\r\n            const newItem = { ...oldItem, done: !oldItem.done };\r\n\r\n            // 2. construct new array\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                newItem,\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray \r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        const doneCount = this.state.todoData.filter((el) => el.done).length;\r\n        const todoCount = this.state.todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">            \r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel  d-flex\">\r\n                    <SearchPanel /> \r\n                    <ItemStatusFilter />\r\n                </div>  \r\n    \r\n                <TodoList \r\n                    todos={this.state.todoData}\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone={ this.onToggleDone }\r\n                />\r\n                <ItemAddForm\r\n                    onItemAdded={ this.addItem }                \r\n                />\r\n            </div>\r\n        );\r\n\r\n    };\r\n    \r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n    document.getElementById('root'));\n    "],"sourceRoot":""}