{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","searchLine","onSearchChange","e","target","value","setState","props","placeholder","type","this","onChange","Component","TodoListItem","label","onDeleted","onToggleDone","onToggleImportant","important","title","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLableChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","addItem","text","console","log","newItem","oldItem","items","length","toLowerCase","indexOf","visebleItems","filterList","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6681375c.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );        \r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n    state = {\r\n        searchLine: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const searchLine = e.target.value;\r\n        this.setState({ searchLine });\r\n        this.props.onSearchChange(searchLine);\r\n    };\r\n\r\n    render () {\r\n        const searchText = 'type to search';\r\n        //пример подключения инлайн-стилей:\r\n        // const styleSearchPanel = {\r\n        //     fontSize: '20px',\r\n        //     fontStyle: 'italic'     \r\n        // };\r\n        // return <input \r\n        //     style={styleSearchPanel}\r\n        //     placeholder={searchText}\r\n        //     disabled={false}\r\n        //     type=\"text\" />;\r\n        return (\r\n            <input className=\"form-control  search-input\"\r\n                placeholder={searchText} \r\n                type=\"text\" \r\n                value={this.state.searchLine}\r\n                onChange={this.onSearchChange}    \r\n            /> \r\n        );\r\n\r\n    } \r\n}","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {   \r\n    \r\n    // state = { \r\n    //     done: false,\r\n    //     important: false\r\n    // };\r\n    // onLabelClick = () => {\r\n    //     this.setState((state) => {\r\n    //         return {\r\n    //             done: !state.done\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    // onMarkImportant = () => {\r\n    //     this.setState((state) => {\r\n    //         return {\r\n    //             important: !state.important\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n\r\n    render() {\r\n        const { label, onDeleted, onToggleDone, \r\n                onToggleImportant, done, important\r\n            } = this.props;\r\n        // const { done, important } = this.state;\r\n        \r\n        let className = 'todo-list-item';\r\n        if (done) {\r\n            className += ' done';\r\n        }\r\n        if (important) {\r\n            className += ' important';\r\n        }\r\n    \r\n        return  (\r\n            <div className={className}>\r\n                    \r\n                <span className=\"float-right\">                \r\n                    <button className=\"btn btn-outline-danger btn-sm\"\r\n                        type=\"button\"\r\n                        title=\"Delet done\" \r\n                        onClick={ onDeleted }\r\n                    >\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-outline-success btn-sm\"\r\n                        type=\"button\"\r\n                        title=\"mark Important\"\r\n                        onClick={ onToggleImportant }\r\n                    >\r\n                        <i className=\"fa fa-exclamation\"></i>\r\n                    </button>              \r\n                </span>\r\n    \r\n                <span\r\n                    className=\"todo-list-item-label\"\r\n                    title=\"mark done\"                  \r\n                    onClick={ onToggleDone }\r\n                >\r\n                    { label }\r\n                </span> \r\n    \r\n    \r\n            </div>\r\n        );\r\n    };\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\r\n    {\r\n    // const elements = todos.map((item) => {\r\n    //     return (\r\n    //         <li>\r\n    //             <TodoListItem \r\n    //                 label={item.label}\r\n    //                 important={item.important}\r\n    //             />\r\n    //         </li>\r\n    //     );\r\n    // });\r\n\r\n    //или тоже самое используя Spread-оператор для объекта чтобы передать \r\n    // каждое свойство объекта внутрь компонета:\r\n    // const elements = todos.map((item) => {\r\n    //     return (\r\n    //         <li key={item.id}>\r\n    //             <TodoListItem { ...item } />\r\n    //         </li>\r\n    //     );\r\n    // });    \r\n    }\r\n    const elements = todos.map((item) => {\r\n\r\n        //каждому JSX элементу в массиве нужно уникальное свойство key\r\n        //исключим передачу свойства id в элемент TodoListItem используя рест-параметр \r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id}  className=\"list-group-item\">\r\n                <TodoListItem \r\n                    { ...itemProps }\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });    \r\n\r\n\r\n    return (\r\n        <ul  className=\"list-group  todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All'},\r\n        { name: 'active', label: 'Active'},\r\n        { name: 'done', label: 'Done'}\r\n    ];\r\n//создадим для каждого элемента массива JSX-элемент при помощи .map\r\n    render() {\r\n\r\n        const { filter, onFilterChange } = this.props;\r\n        \r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = (isActive) ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button className={`btn ${clazz}`}\r\n                    type=\"button\"\r\n                    key={name}\r\n                    onClick={() => onFilterChange(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n// const ItemStatusFilter = () => {\r\n//     return (\r\n//         <div className=\"btn-group\">\r\n//             <button className=\"btn  btn-info\"\r\n//                 type=\"button\">All</button>\r\n//             <button className=\"btn  btn-outline-secondary\"\r\n//                 type=\"button\">Active</button>\r\n//             <button className=\"btn  btn-outline-secondary\"\r\n//                 type=\"button\">Done</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLableChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    \r\n    render () {\r\n        const addItemText = 'type what needs to do'\r\n\r\n        return (\r\n            <form className=\"item-add-form  d-flex\"\r\n                onSubmit={ this.onSubmit }  \r\n            >\r\n                <input \r\n                    className=\"item-add-form-input  form-control\"\r\n                    placeholder={addItemText} \r\n                    type=\"text\"\r\n                    onChange={ this.onLableChange }\r\n                    value={ this.state.label }\r\n                />\r\n                <button \r\n                    className=\"btn  btn-outline-secondary\"                    \r\n                    title=\"Delet done\" \r\n                    // onClick={ () => this.props.onItemAdded('add item') }                    \r\n                >Add&nbsp;item\r\n                </button>\r\n            </form>   \r\n            \r\n        );        \r\n    };\r\n};\r\n\r\n","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId=100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Learn React'),\r\n            this.createTodoItem('Build Awesome React App'),\r\n            this.createTodoItem('Give to the world my \\'Todo\\u00A0App\\'')\r\n        ],\r\n        searchLine: '',\r\n        filter: 'all' // active, done, all\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            //todoData.splice(idx, 1); - нельзя изменять существующий State\r\n\r\n            // [a, b, c, d, e]\r\n            // [a, b,    d, e]\r\n            const before = todoData.slice(0, idx);\r\n            const after = todoData.slice(idx + 1);\r\n\r\n            const newArray = [...before, ...after];\r\n\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        //\r\n        console.log('text:', text);\r\n        // generate id\r\n        const newItem = this.createTodoItem(text);\r\n        // add element in array\r\n        this.setState(({todoData}) => {\r\n\r\n            const newArray = [...todoData, newItem];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            // 1. update objekt\r\n            const oldItem = todoData[idx];\r\n            const newItem = { ...oldItem, important: !oldItem.important };\r\n\r\n            // 2. construct new array\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                newItem,\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray \r\n            }\r\n        });\r\n        \r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            // 1. update objekt\r\n            const oldItem = todoData[idx];\r\n            const newItem = { ...oldItem, done: !oldItem.done };\r\n\r\n            // 2. construct new array\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                newItem,\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray \r\n            }\r\n        });\r\n    };\r\n\r\n    onSearchChange = (searchLine) => {\r\n        this.setState({ searchLine });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    search(items, searchLine) {\r\n        if (searchLine.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {           \r\n            return item.label.toLowerCase().indexOf(searchLine.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    filterList(items, filter) {\r\n\r\n        switch(filter) {\r\n            case 'all': \r\n                return items;\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, searchLine, filter } = this.state;\r\n\r\n        const visebleItems = this.filterList(\r\n            this.search(todoData, searchLine), filter);\r\n\r\n        const doneCount = this.state.todoData.filter((el) => el.done).length;\r\n        const todoCount = this.state.todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app\">            \r\n                <AppHeader toDo={todoCount} done={doneCount} />\r\n                <div className=\"top-panel  d-flex\">\r\n                    <SearchPanel \r\n                        onSearchChange={this.onSearchChange}\r\n                    /> \r\n                    <ItemStatusFilter \r\n                        filter={filter}\r\n                        onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>  \r\n    \r\n                <TodoList \r\n                    // todos={todoData}\r\n                    todos={visebleItems}\r\n                    onDeleted={ this.deleteItem }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone={ this.onToggleDone }\r\n                />\r\n                <ItemAddForm\r\n                    onItemAdded={ this.addItem }                \r\n                />\r\n            </div>\r\n        );\r\n\r\n    };\r\n    \r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n    document.getElementById('root'));\n    "],"sourceRoot":""}